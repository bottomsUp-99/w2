1. 필터를 이용한 로그인 체크

    로그인 여부를 체크해야 하는 컨트롤러마다 동일하게 체크하는 로직을 작성하면 같은 코드를 계속 작성해야 한다.
    이를 위해 우리는 피러(Servlet Filter)를 이용하여 처리한다.

    필터는 특정한 서블릿이나 JSP 등에 도달하는 과정에서 필터링 역할을 하는 서블릿 객체이다.
    @WebFilter 어노테이션을 이용하여 특정한 경로에 접근할 때 필터가 동작하도록 설계하고 동일한 로직을 필터로 분리할 수 있다.
    필터는 한 개 이상, 여러 개를 적용할 수 있다.(필터 체이닝)

2. 한글 필터링 처리(UTF-8 필터)
    HttpServletRequest의 데이터를 setCharacterEncodijng 속성값을 UTF-8로 셋팅

3. 로그인과 로그아웃의 동작여부를 이해하고 확인해보았다.
    실제 데이터베이스를 이용해서 회원정보를 구성하고 이 내용을 활용하여 실습

4. 데이터베이스에 회원을 ㅈ장할 테이블을 생성, 3명의 임시 회원을 가입한 상황

5. 자바에서 회원 데이터 처리 => 자바에서 객체 처리되도록 VO / DAO 준비한다.
    - domain 밑에 MemberVO

    - dao 밑에 MemberDAO
        - public MemberVO getWithPassword(String mid, String mpw) => 회원의 아이디와 비밀번호를 받아 회원의 정보를 제공한다.

    - dto 밑에 MemberDTO

    - service 밑에 MemberService
        MemberService는 여러곳에서 동일한 객체를 사용할 수 있도록 enum으로 하나의 객체로 구성하여 MemberDAO를 이용하도록 구성합니다.
        MemberService 내에는 로그인 처리를 위한 login() 메서드를 작성합니다.
        modelMapper를 이용합니다.

    - LoginController의 doPost에서 MemberService를 연동해서 실제로 로그인이 되도록 구동합니다.

6. 컨트롤러에서 로그인 연동

7. HttpSession을 이용할 때
    JSESSIONID(서버쿠키, 세션 쿠키)
    - 생성 : 자동생성
    - 유효기간 : 지정불가
    - 브라우저 보관방식 : 메모리 상에서만 보관 가능
    - 쿠키 사이크(크기) : 4kb
    개발자가 직접 쿠키를 생성해서 사용자 정의 쿠키를 사용할 수 있다.
    - 생성 : 개발자가 직접 생성 new Cookie() 생성
    - 유효기간 : 지정(초단위)
    - 전송 : 반드시 HttpServletResponse에 addCookie를 통해서 클라이언트(브라우저)에 전송
    - 브라우저 보관방식 : 유효기간이 없는 경우는 메모리 상에서만 보관 가능하며 유효기간이 있는 경우 파일로 보관 가능
    - 쿠키 사이크(크기) : 4kb

    쿠키의 사용 예 : 오늘 하루 이창 열지 않기, 최근 본 상품 목록, 모바일에서 자동로그인(쿠키 대표적 기능)

    Todo목록에서 조회했던 Todo 번호(Tno)들을 쿠키를 이용하여 보관해본다
    동작방식의 이해
    1) 브라우저에서 전송된 쿠키가 있는지 확인
    2) 만약 있다면 해당 쿠키의 값(value) 활용하고, 없다면 새로운 문자열(값)을 생성한다.
    3) 쿠키의 이름을 'viewTodos'라고 지정
    4) 문자영 내에 현재 Todo의 문자번호를 문자열로 연결
    5) '2-3-4' 형태로 연결하고 이미 조회한 번호는 추가하지 않는다.
    6) 쿠키의 유효시간은 1분으로 지정하고 쿠키를 담아 전송한다.